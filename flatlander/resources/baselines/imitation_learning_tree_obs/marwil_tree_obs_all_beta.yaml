flatland-random-sparse-small-tree-fc-marwil-il:
    run: MARWIL
    env: flatland_sparse
    stop:
        timesteps_total: 1000000000  # 1e9
    checkpoint_freq: 50
    checkpoint_at_end: True
    keep_checkpoints_num: 100
    checkpoint_score_attr: episode_reward_mean
    config:
        beta:
            grid_search: [0, 0.25, 0.5, 0.75, 1]   # compare IL (beta=0) vs MARWIL
        input: /tmp/flatland-out
        input_evaluation: [is, wis, simulation]
        # effective batch_size: train_batch_size * num_agents_in_each_environment [5, 10]
        # see https://github.com/ray-project/ray/issues/4628
        train_batch_size: 1000  # 5000
        rollout_fragment_length: 50  # 100
        batch_mode: truncate_episodes
        observation_filter: NoFilter
        num_workers: 10
        num_envs_per_worker: 1
        num_gpus: 0

        env_config:
            observation: tree
            observation_config:
                max_depth: 2
                shortest_path_max_depth: 30

            generator: sparse_rail_generator
            generator_config: small_v0
            seed: 0

            wandb:
                project: flatland
                entity: masterscrat
                tags: ["small_v0", "tree_obs", "MARWIL"] # TODO should be set programmatically

        model:
            fcnet_activation: relu
            fcnet_hiddens: [256, 256]
            vf_share_layers: True  # False

        evaluation_num_workers: 2
        # Enable evaluation, once per training iteration.
        evaluation_interval: 50
        # Run 1 episode each time evaluation runs.
        evaluation_num_episodes: 50
        # Override the env config for evaluation.
        evaluation_config:
           explore: False
           env_config:
                observation: tree
                observation_config:
                   max_depth: 2
                   shortest_path_max_depth: 30

                generator: sparse_rail_generator
                generator_config: small_v0
                seed: 100
